plugins {
    id 'idea'
    id 'checkstyle'
    id 'pmd'
    id 'application'
}

ext.artifactName = 'radar-schemas-validation'
ext.description = 'RADAR Schemas Validator. JUnit tests to check schema acceptance.'

targetCompatibility = '1.8'
sourceCompatibility = '1.8'
mainClassName = 'org.radarcns.schema.CommandLineApp'

sourceSets {
    test {
        java.srcDir 'src/test/java'
        resources.srcDir 'src/test/resources'
    }
}

ext.junitVersion = '4.12'
ext.slf4jVersion = '1.7.25'

dependencies {
    api group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.8.10'
    implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.8.10'
    implementation project(':radar-schemas-commons')
    implementation group: 'org.radarcns', name: 'radar-commons', version: '0.5'
    implementation group: 'net.sourceforge.argparse4j', name: 'argparse4j', version: '0.7.0'

    runtimeOnly group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'

    testCompile group: 'junit', name: 'junit', version: junitVersion
}

task createStartScripts(type: CreateStartScripts) {
    applicationName = 'radar-schema'
}

//---------------------------------------------------------------------------//
// Test definition                                                           //
//---------------------------------------------------------------------------//
test {
    testLogging {
        events "skipped", "failed"
        exceptionFormat "full"
        showExceptions = true
        showCauses = true
        showStackTraces = true
        showStandardStreams = true
    }
}

//---------------------------------------------------------------------------//
// Style checking                                                            //
//---------------------------------------------------------------------------//
checkstyle {
    // codacy version
    toolVersion '6.16'
    ignoreFailures false

    configFile = file("$projectDir/config/checkstyle/checkstyle.xml")
}

pmd {
    // pmd version
    toolVersion = '5.5.2'
    ignoreFailures = false

    consoleOutput = true

    ruleSets = []

    ruleSetFiles = files("$projectDir/config/pmd/ruleset.xml")
}
